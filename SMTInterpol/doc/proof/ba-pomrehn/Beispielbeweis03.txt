ALT:

(@clause 
	(@eq 
		(@eq 
			(@asserted (or c (not (or a b (not a))))) 
			(@rewrite (! (= (or a b (not a)) true) :orTaut)) 
			(@rewrite (! (= (not true) false) :notSimp)) 
			(@rewrite (! (= (or c false) c) :orSimp))) 
		(@intern (= c (! c :quoted)))) 
	(! c :quoted))


NEU: (wobei (@eq s (= s t)) einen Beweis f√ºr t liefert)

(@clause

	// (! c :quoted)

	(@eq
		(@asserted (or c (not (or a b (not a)))))
		// (= (or c (not (or a b (not a)))) (! c :quoted))
		(@trans 
			// (=
			//	(or c (not (or a b (not a))))
			//	(or c false))
			(@cong 
				(@refl (or c (not (or a b (not a)))))
				// (=
				//		(not (or a b (not a)))
				//		false)
				(@trans
					// (= 
					//		(not (or a b (not a)))
					//		(not true))
			
					(@cong 
						(@refl (not (or a b (not a))))
						(@rewrite (! (= (or a b (not a)) true) :orTaut)))
					(@rewrite (! (= (not true) false) :notSimp))))
			(@rewrite (! (= (or c false) c) :orSimp))
			(@intern (= c (! c :quoted)))))

(! c :quoted))
